<?xml version="1.0"?>
<project name="neoclassycle" default="jar" basedir=".">
    <property name="target.version" value="2.0.0"/>

    <property name="build.dir"      value="build"/>
    <property name="lib.dir"        value="vendor/lib"/>
    <property name="testlib.dir"    value="vendor/testlib"/>
    <property name="built-main.dir" value="${build.dir}/main"/>
    <property name="built-test.dir" value="${build.dir}/test"/>

    <tstamp><format property="build.number" pattern="yyyyMMddHHmmss" timezone="GMT"/></tstamp>
    <tstamp><format property="build.timestamp" pattern="yyyy-MM-dd HH:mm:ss" timezone="GMT"/></tstamp>

    <path id="compile-main.req">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    </path>

    <path id="run-main.req">
        <path refid="compile-main.req"/>
        <pathelement location="${built-main.dir}"/>
    </path>

    <path id="compile-test.req">
        <path refid="run-main.req"/>
        <fileset dir="${testlib.dir}" includes="**/*.jar"/>
    </path>

    <macrodef name="compile-module">
        <attribute name="srcdir"/>
        <attribute name="destdir"/>
        <attribute name="classpathref"/>

        <sequential>
            <javac srcdir="@{srcdir}/java"
                   includes="**"
                   includeantruntime="false"
                   encoding="utf-8"
                   destdir="@{destdir}"
                   source="1.5"
                   target="1.5"
                   debug="true"
                   debuglevel="lines,source">
                <classpath refid="@{classpathref}"/>
            </javac>

            <copy todir="@{destdir}">
                <fileset dir="@{srcdir}/java" excludes="**/*.java"/>
            </copy>
        </sequential>
    </macrodef>

    <target name="version-for-snapshot" unless="version.label">
        <property name="version.label" value="${target.version}-SNAPSHOT-${build.number}"/>
    </target>

    <target name="version-for-release" unless="version.label">
        <property name="version.label" value="${target.version}"/>
    </target>

    <target name="version" depends="version-for-snapshot,version-for-release">
        <echo message="Building version ${version.label}"/>
    </target>

    <target name="clean" description="Clean this project">
        <delete dir="${build.dir}" failonerror="false"/>
    </target>

    <target name="prepare">
        <mkdir dir="${build.dir}"/>
    </target>

    <target name="compile-main" depends="prepare">
        <mkdir dir="${built-main.dir}"/>
        <compile-module srcdir="src/main" destdir="${built-main.dir}" classpathref="compile-main.req"/>
    </target>

    <target name="compile-test" depends="prepare,compile-main">
        <mkdir dir="${built-test.dir}"/>
        <compile-module srcdir="src/test" destdir="${built-test.dir}" classpathref="compile-test.req"/>
        <copy todir="${built-test.dir}">
            <fileset dir="src/test/resources" includes="**/*"/>
        </copy>
    </target>

    <target name="compile-javadoc" depends="prepare" description="generate API doc">
        <mkdir dir="${build.dir}/api-doc"/>
        <javadoc destdir="${build.dir}/api-doc" author="true" version="true" use="true" windowtitle="neoclassycle">
            <fileset dir="src/main/java" defaultexcludes="yes">
                <include name="org/netmelody/neoclassycle/**"/>
            </fileset>
            <doctitle><![CDATA[<h1>Neoclassycle</h1>]]></doctitle>
            <bottom><![CDATA[<i>Copyright &#169; 2012, Tom Denley. All rights reserved.</i><br/><i>Copyright &#169; 2003-2008, Franz-Josef Elmer. All rights reserved.</i>]]></bottom>
            <link href="https://github.com/netmelody/neoclassycle/"/>
        </javadoc>
    </target>

    <target name="jar-main" depends="clean,compile-main,version">
        <jar destfile="${build.dir}/${ant.project.name}-${version.label}.jar">
            <fileset dir="${built-main.dir}"/>
            <fileset dir="${basedir}" includes="LICENSE.txt README.html"/>

            <manifest>
                <attribute name="Main-Class" value="org.netmelody.neoclassycle.Analyser"/>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Implementation-Vendor" value="netmelody.org"/>
                <attribute name="Implementation-Title" value="${ant.project.name}"/>
                <attribute name="Implementation-Version" value="${version.label}"/>
                <attribute name="Built-Date" value="${build.timestamp}"/>
            </manifest>
        </jar>
    </target>

    <target name="jar-test" depends="clean,compile-test,version">
        <jar destfile="${build.dir}/${ant.project.name}-tests-${version.label}.jar">
            <fileset dir="${built-test.dir}"/>

            <zipfileset src="${testlib.dir}/ant-testutil.jar" excludes="**/META-INF/**"/>
            <zipfileset src="${testlib.dir}/junit-dep-4.10.jar" excludes="**/META-INF/**"/>
            <zipfileset src="${testlib.dir}/hamcrest-all-1.3.0RC2.jar" excludes="**/META-INF/**"/>

            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Implementation-Vendor" value="netmelody.org"/>
                <attribute name="Implementation-Title" value="${ant.project.name} Tests"/>
                <attribute name="Implementation-Version" value="${version.label}"/>
                <attribute name="Built-Date" value="${build.timestamp}"/>
            </manifest>
        </jar>
    </target>

    <target name="jar-sources" depends="clean,prepare">
        <jar destfile="${build.dir}/${ant.project.name}-${version.label}-sources.jar">
            <fileset dir="src/main/java"/>
            <fileset dir="${basedir}" includes="LICENSE.txt README.html"/>
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Implementation-Vendor" value="netmelody.org"/>
                <attribute name="Implementation-Title" value="${ant.project.name} Sources"/>
                <attribute name="Implementation-Version" value="${version.label}"/>
                <attribute name="Built-Date" value="${build.timestamp}"/>
            </manifest>
        </jar>
    </target>
	
    <target name="jar-javadoc" depends="clean,compile-javadoc">
        <jar destfile="${build.dir}/${ant.project.name}-${version.label}-javadoc.jar">
            <fileset dir="${build.dir}/api-doc"/>
            <fileset dir="${basedir}" includes="LICENSE.txt"/>
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Implementation-Vendor" value="netmelody.org"/>
                <attribute name="Implementation-Title" value="${ant.project.name} JavaDoc"/>
                <attribute name="Implementation-Version" value="${version.label}"/>
                <attribute name="Built-Date" value="${build.timestamp}"/>
            </manifest>
        </jar>
    </target>

    <target name="jar" description="Create jar files" depends="jar-main,jar-test,jar-sources,jar-javadoc"/>

    <target name="test" description="Test this project" depends="jar-main,jar-test">
        <property name="test-report.dir" value="${build.dir}/testreport"/>
        <mkdir dir="${test-report.dir}"/>

        <junit printsummary="yes" haltonfailure="yes">
            <classpath>
              <pathelement location="${build.dir}/${ant.project.name}-${version.label}.jar"/>
              <pathelement location="${build.dir}/${ant.project.name}-tests-${version.label}.jar"/>
            </classpath>
            <formatter type="plain"/>
            <batchtest fork="yes" todir="${test-report.dir}">
                <zipfileset src="${build.dir}/${ant.project.name}-tests-${version.label}.jar">
                    <include name="**/neoclassycle/**/*Test.class"/>
                </zipfileset>
            </batchtest>
        </junit>
    </target>

    <target name="snapshot" description="Create a tested snapshot jar file" depends="jar,test"/>

    <target name="release" description="Create a tested release zip file" depends="version-for-release,snapshot">
        <zip destfile="${build.dir}/${ant.project.name}-${version.label}-all.zip">
            <zipfileset dir="${basedir}">
                <include name="LICENSE.txt"/>
                <include name="README.html"/>
            </zipfileset>
            <zipfileset dir="${build.dir}">
                <include name="${ant.project.name}-${version.label}.jar"/>
                <include name="${ant.project.name}-${version.label}-sources.jar"/>
                <include name="${ant.project.name}-${version.label}-javadoc.jar"/>
            </zipfileset>
        </zip>
    </target>
</project>